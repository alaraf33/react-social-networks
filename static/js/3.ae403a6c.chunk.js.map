{"version":3,"sources":["componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/MyPost/MyPosts.module.css","componets/Profile/MyPost/Post/Post.module.css","componets/Profile/ProfileInfo/ProfileStatus.jsx","componets/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/MyPost/Post/Post.jsx","componets/Profile/MyPost/MyPosts.jsx","componets/Profile/MyPost/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","aboutMe","lookingForAJobDescription","Preloader","Post","item","massage","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postElements","posts","reverse","map","p","postBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ae403a6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2dd7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__1faEo\",\"posts\":\"MyPosts_posts__3cMK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-puP\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    \r\n    activateEditMode = () =>{\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode  = () =>{\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n       this.setState({\r\n           status: e.currentTarget.value\r\n       });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick= {this.activateEditMode.bind(this) }>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n       let [editMode, setEditMode]=  useState(false);\r\n       let [status, setStatus]=  useState(props.status);\r\n\r\n       useEffect(() => {\r\n           setStatus(props.status)\r\n       }, [props.status]);\r\n\r\n       const activateEditMode = () =>{\r\n           setEditMode(true)\r\n       }\r\n\r\n    const deactivateEditMode  = () =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick= {activateEditMode }> {props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode}\r\n                               value = {status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader\";\nimport Profile from \"../Profile\";\nimport ProfileStatus from \"./ProfileStatus\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n\n    if(!profile){\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large} />\n                <div>{profile.aboutMe}</div>\n                <div>{profile.lookingForAJobDescription}</div>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n\n    return (\n        <div className={s.item}>\n            <img\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQC5A7OMJkpx_aj1ZnN_rNKPIR9AYf99F8PoA&usqp=CAU'/>\n            {props.massage}\n            <div>like {props.likeCount}</div>\n        </div>\n\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst maxLength10  =  maxLengthCreator(10);\n\nlet AddNewPostForm = (props) =>  {\n    return(\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field name= 'newPostText' component={Textarea}  placeholder={'Post message'}\n                   validate={[required, maxLength10]} />\n        </div>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n   )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n    let postElements =\n        [...props.posts]\n            .reverse()\n            .map(p => <Post massage={p.massage} likeCount={p.likeCount}/>);\n\n\n    let newPostElement = React.createRef();\n\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);  //функция с мир а бизнеса\n    }\n\n    return (\n        <div className={s.postBlock}>\n            <h3>My Post</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postElements}\n            </div>\n        </div>\n\n    );\n});\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redax/profile_reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nconst mapStateToProps = (state) =>{\n        return{\n            posts: state.profilePage.posts,\n            newPostText: state.profilePage.newPostText\n        }\n}\nconst mapDispatchToProps = (dispatch) =>{\n        return{\n            addPost: (newPostText) =>{\n                dispatch(addPostActionCreator(newPostText));\n            }\n        }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n             <ProfileInfo profile = {props.profile} status={props.status} updateStatus={props.updateStatus}/>\n             <MyPostsContainer />\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redax/profile_reducer\";\n\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\n\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n            this.props.getStatus(userId);\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n    )(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}