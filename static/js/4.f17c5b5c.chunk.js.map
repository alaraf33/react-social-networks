{"version":3,"sources":["componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogItem/DialogItem.jsx","componets/Dialogs/Message/Message.jsx","componets/Dialogs/AddMessageForm/AddMessageForm.jsx","componets/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","componets/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogs","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElement","map","d","messagesElements","massages","m","massage","newMessageBody","isAuth","dialogsItems","messages","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,QAAU,IAAMD,IAAEE,OAApC,SACH,eAAC,IAAD,CAASC,GAAIN,EAAb,UAAoBD,EAAMQ,KAAMR,EAAME,SCE/BO,EAPC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,yCCCvCC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAhBQ,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,qBAAqBZ,KAAM,iBACvCa,SAAU,CAACC,IAAUX,OAGhC,8BACI,mDCyCDY,EAjDC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAiBF,EAAMnB,QAAQsB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBN,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAEzE2B,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAEC,SAAcD,EAAE7B,OAE9DsB,EAAMS,eAM3B,OAAKjC,EAAMkC,OAIP,sBAAK/B,UAAWC,IAAEC,QAAlB,UACI,qBAAKF,UAAWC,IAAE+B,aAAlB,SACKT,IAGL,qBAAKvB,UAAWC,IAAEgC,SAAlB,SACI,8BAAMP,MAGV,cAAC,EAAD,CAAgBd,SAjBJ,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOJ,sBAGH,cAAC,IAAD,CAAU1B,GAAI,Y,+CClBxCgC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,QCkBRO,sBACXC,aAhBkB,SAAClB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAM,CACFL,YAAa,SAACL,GACVU,EAASC,YAAmBX,UDRR,SAACY,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK/C,MAAMkC,OAET,cAACW,EAAD,eAAeE,KAAK/C,QAFI,cAAC,IAAD,CAAUO,GAAG,eAJT,GAEXyC,IAAMH,WAUtC,OAFoCH,YAAQH,EAARG,CAAoCI,KCK7DL,CAGblB","file":"static/js/4.f17c5b5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xva_\",\"dialogsItems\":\"Dialogs_dialogsItems__1qfxp\",\"active\":\"Dialogs_active__3H6UH\",\"messages\":\"Dialogs_messages__3K17-\",\"message\":\"Dialogs_message__3THSd\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return <div className={s.dialogs + ' ' + s.active}>\n        <NavLink to={path}>{props.name}{props.id}</NavLink>\n    </div>\n}\n\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './..//Dialogs.module.css';\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n\n}\n\n\n\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter your massage' name ='newMessageBody'\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send2</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from 'redux-form';\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\n    let messagesElements = state.massages.map(m => <Message message={m.massage} key={m.id} />);\n\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElement}\n            </div>\n\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n\n            </div>\n            <AddMessageForm onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\n//const AddMessageFormRedux = reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);\n\n// const AddMessageForm = (props) =>{\n//     return (\n//         <form onSubmit={props.handleSubmit}>\n//             <div>\n//                 <Field component='textarea' name ='newMessageBody' placeholder='Enter your massage' />\n//             </div>\n//             <div><button>Send</button></div>\n//         </form>\n//     )\n// }\n//\n// const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\n\n\n\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent =connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\nimport {sendMessageCreator} from \"../../redax/dialogs_reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) =>{\n    return{\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        sendMessage: (newMessageBody) =>{\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}